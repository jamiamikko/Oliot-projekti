package motor;

import lejos.hardware.Button;
import lejos.hardware.lcd.LCD;
import lejos.hardware.motor.EV3LargeRegulatedMotor;
import lejos.hardware.motor.EV3MediumRegulatedMotor;
import lejos.hardware.port.MotorPort;
import lejos.hardware.sensor.EV3IRSensor;
import lejos.hardware.sensor.SensorModes;
import lejos.utility.Delay;


public class InfraredSignalCheckerThread extends Thread {

	
    private EV3IRSensor infraredSensor;
    EV3LargeRegulatedMotor largeMotor;
    EV3LargeRegulatedMotor largeMotor2;
    EV3MediumRegulatedMotor largeMotor3;
    
    public InfraredSignalCheckerThread(final EV3IRSensor sensor){
        this.infraredSensor = sensor;
    }	

    @Override
    public void run() {
    	largeMotor = new EV3LargeRegulatedMotor(MotorPort.B);
    	largeMotor2 = new EV3LargeRegulatedMotor(MotorPort.D);
    	largeMotor3 = new EV3MediumRegulatedMotor(MotorPort.A);
    	
    	largeMotor.setSpeed(800);
    	largeMotor2.setSpeed(800);
    	largeMotor3.setSpeed(200);
    	
    	

    	while(Button.ESCAPE.isUp()){
            final int remoteCommand = infraredSensor.getRemoteCommand(0);
            switch (remoteCommand){
                case 1:
               
                	largeMotor.forward();
                	largeMotor2.forward();
                	
                	
                	
                	
                    break;
                case 2:
                	largeMotor.backward();
                	largeMotor2.backward();
                	break;
                case 3:
                	
                	largeMotor3.backward();
                	break;
                case 4:
                	largeMotor3.forward();
                	break;
                case 9:
                	largeMotor2.stop(true);
                	largeMotor.stop(true);
                	break;
                default:
                	//largeMotor2.stop(true);
                	//largeMotor.stop(true);
                	largeMotor3.stop(true);
                	
            }
        }
    }    
    
}